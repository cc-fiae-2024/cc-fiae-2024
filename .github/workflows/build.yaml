name: Build Laravel Github action
on:
  pull_request:
    branches:
      - main
      - develop

env:
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  # See https://github.com/cc-fiae-2024/cc-fiae-2024/settings/secrets/actions
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: testing

jobs:
  laravel-tests:
    # See https://docs.github.com/en/actions/writing-workflows/choosing-where-your-workflow-runs/choosing-the-runner-for-a-job#standard-github-hosted-runners-for-public-repositories
    runs-on: ubuntu-24.04
    environment: testing

    strategy:
      matrix:
        operating-system: [ubuntu-24.04]
        # Limited by https://github.com/shivammathur/setup-php#github-hosted-runners
        php-versions: [ '8.3' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v4.1.7 # Even better: using @<commit-SHA>

    - name: Start MySQL service
      run: sudo systemctl start mysql.service

    - name: Install PHP versions
      uses: shivammathur/setup-php@2.31.1
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Setup Node
      uses: actions/setup-node@v4.0.4
      with:
        node-version: 20
        cache: 'npm'

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4.0.2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache PHP dependencies
      uses: actions/cache@v4.0.2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

    - name: Install PHP Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install Node Dependencies
      # TODO: Test, whether --ignore-scripts work here, as this is helping in hardening (preventing postinstall scripts)
      run: npm ci

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Prepare Laravel Application
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        php artisan key:generate

    - name: Run Migrations
      run: php artisan migrate

    - name: Build Frontend Assets
      run: npm run build
          
    - name: Upload Artifact
      uses: actions/upload-artifact@v4.4.0
      with:
        name: public-folder
        path: public